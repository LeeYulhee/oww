plugins {
    id 'java'
    id 'org.springframework.boot' version '3.5.3'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'flobitt'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // Web
    implementation 'org.springframework.boot:spring-boot-starter-web'
    // Lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    // DevTools
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    // Validation
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    // JPA
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    // MariaDB
    runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
    // Email
    implementation 'org.springframework.boot:spring-boot-starter-mail'
    // P6SPY : 쿼리 로깅
    implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.9.0'
    // Security
    implementation 'org.springframework.boot:spring-boot-starter-security'
    // Configuration Processor : 컴파일 타임에 설정 메타데이터를 자동 생성하는 annotation processor
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    // Swagger
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0'
    //Querydsl 설정 추가
	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
	annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"
    // JWT
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-impl:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-jackson:0.11.5'
    // Test
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
    useJUnitPlatform()
}
